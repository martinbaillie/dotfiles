#unbind C-b ; set -g prefix C-space
unbind C-b ; set -g prefix C-a

set -g default-terminal 'screen-256color'
set -ga terminal-overrides ',screen-256color:Tc'
set -g terminal-overrides ',xterm-256color:Tc'

set -g base-index 1
set -g history-limit 100000
set -g escape-time 0                    # affects nvim otherwise

set -g set-titles on
set -g display-panes-time 1000
set -g mouse on

# renumber windows after closing
set-option -g renumber-windows on

setw -g monitor-activity on
setw -g automatic-rename on
setw -g clock-mode-style 24
setw -g alternate-screen on
setw -g mode-keys vi                    # vi mode

bind v copy-mode                        # prefix v starts copy mode
bind p paste-buffer                     # prefix p pastes the latest buffer

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

unbind-key -T copy-mode-vi Space                ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter                ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel pbcopy
unbind-key -T copy-mode-vi C-v                  ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [                    ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]                    ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection
unbind-key -T copy-mode-vi MouseDragEnd1Pane    ;   bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel pbcopy

# stay zoomed and switch between panes
bind -r a select-pane -t .+1 \;  resize-pane -Z

# reloading
bind r source-file ~/.tmux.conf \; display-message 'Reloaded ~/tmux.conf'

bind | split-window -h                  # split vertically
bind \ split-window -h                  # split vertically
bind - split-window -v                  # split horizontally
bind _ split-window -v                  # split horizontally
bind = select-layout even-vertical      # evenly resize vertically
bind + select-layout even-horizontal    # evenly resize horizontally
bind e set -g synchronize-panes         # synchronize pane inputs (broadcast behaviour)

# smart pane switching with awareness of Vim splits
# see: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# use hjkl for resizing
bind -r h resize-pane -L 3
bind -r j resize-pane -D 3
bind -r k resize-pane -U 3
bind -r l resize-pane -R 3

# switching windows
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# clear pane
bind-key L send-keys C-u \; send-keys "clear" \; send-keys "Enter"  
# clear tmux buffer too
bind-key K send-keys C-u \; send-keys "clear && tmux clear-history" \; send-keys "Enter" \; run-shell "sleep .3s" \; send-keys "Up" \; send-keys C-u 
# set a shell into vi mode 
bind-key V send-keys C-u \; send-keys "set -o vi" \; send-keys "Enter"  

# rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

source-file ~/.tmux/theme.conf
