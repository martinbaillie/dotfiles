#!/bin/bash
cd "$(dirname $(readlink -f $0))"
source panel_config

if [ $(pgrep -cx panel) -gt 1 ] ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap "trap - TERM; kill 0" INT TERM QUIT EXIT

function make_wm_infos() {
    # Na0Hman
    wm_infos=""
    if [[ ${#title} -lt 26 ]]; then
        offset=$(expr 26 - ${#title})
        left=$(expr $offset / 2)
        right=$(expr $offset - $left)
        roff=$(printf "%${right}s")
        loff=$(printf "%${left}s")
        title="$roff$title$loff"
        start=0
    else
        start=$(expr ${#title} - 26)
        start=$(expr $start / 2)
    fi
    wm_infos=${title:0:start}
    for i in {0..8}; do
        wm_infos="$wm_infos${colors[i]}%{+u}${title:start:2}%{-u}${title:start+2:1}"
        start=$(expr $start + 3)
    done
    wm_infos="$wm_infos${title:start}"
}

{
    while read -r line ; do
        case $line in
            B*)
                bat="$(eval echo ${line#?})"
                ;;
            D*)
                dat="$(eval echo ${line#?})"
                ;;
            M*)
                mus="$(eval echo ${line#?})"
                ;;
            N*)
                net="$(eval echo ${line#?})"
                ;;
            P*)
                pac="$(eval echo ${line#?})"
                ;;
            W*)
                workspaces="$(cut -d: -f1 <<< $line)"
                title="$(cut -d: -f2 -s <<< $line)"
                set -- ${workspaces#?}
                count=0
                while [ $# -gt 0 ] ; do
                    item=$1
                    case $item in
                        a)
                            colors[$count]=$ACTIVE
                            ;;
                        o)
                            colors[$count]=$OCCUPIED
                            ;;
                        i)
                            colors[$count]=$INACTIVE
                            ;;
                        u)
                            colors[$count]=$URGENT
                            ;;
                    esac
                    count=$(expr $count + 1)
                    shift
                done
                ;;
            V*)
                vol="$(eval echo ${line#?})"
                ;;
        esac
        make_wm_infos
        printf "%s\n" "%{l}$pac$vol$mus%{c}$wm_infos%{r}$net$bat$dat"
    done
} | lemonbar -f "$FONT1" -f "$FONT2" -f "$FONT3" -f "$ICON" -B "$BG" -F "$FG" -p
