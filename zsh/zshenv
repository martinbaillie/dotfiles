# EXPORTS {
export EDITOR=nvim
export VISUAL=nvim
export PAGER=vimpager

export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_HOME=$HOME/.local/share
export XDG_DATA_DIRS=$XDG_DATA_HOME:/usr/local/share/:/usr/share/

export PANEL_FIFO="/tmp/panel-fifo"

export HISTSIZE=60000
export HISTFILE=~/.zsh/zsh_history

export IRCNICK=zslothy
export IRCUSER=zslothy
export IRCNAME=zslothy
export IRCSERVER=irc.freenode.net

export GOPATH=$HOME/Code/go
export GOROOT=/usr/local/opt/go/libexec

export CLICOLOR=true

export PATH="/usr/local/bin:$PATH:/sbin:/opt/Citrix/ICAClient:$HOME/Code/bin:$HOME/.cabal/bin:$HOME/.local/bin:$GOPATH/bin:$GOROOT/bin"

# xmonad is not a reparenting window manager, tell java
export _JAVA_AWT_WM_NONREPARENTING=1
export JAVA_HOME=/usr/lib/jvm/default-runtime

export GOOS=$(uname -s | tr '[:upper:]' '[:lower:]')

# Ensure path arrays do not contain duplicates.
typeset -g cdpath fpath mailpath path

# ALIASES {
case `uname` in
  Darwin)
    #vim () { [ -z "$(vim --serverlist)" ] && command vim "$@" || command vim --remote-silent "$@" ; }
    #vim () { [ -z "$(mvim --serverlist)" ] && command mvim "$@" || command mvim --remote-silent "$@" ; }
    vim () { export NVIM_LISTEN_ADDRESS=/tmp/nvimsocket; if [ -S "${NVIM_LISTEN_ADDRESS}" ]; then nvr --remote-silent "$@"; else nvim "$@"; fi }
    #vim () { export NVIM_LISTEN_ADDRESS=/tmp/nvimsocket; if ps x | grep "[n]vim" &>/dev/null; then nvr --remote-silent "$@"; else nvim "$@"; fi }
    alias ls='ls -FG'
    export BROWSER='open'
    ;;
  Linux)
    alias ls='ls -F --color=auto'
    export BROWSER=chromium
    ;;
esac
alias less=$PAGER
alias urxvt=urxvtc
alias vi=vim
alias update-pacman-mirrors="sudo reflector --verbose --country Australia -l 10 -p http --sort rate --save /etc/pacman.d/mirrorlist"
alias conky-refresh="killall -SIGUSR1 conky"

alias docker-rm-stopped='docker rm $(docker ps -q -f status=exited)'
alias docker-rm-dangling-images='docker rmi $(docker images -f "dangling=true" -q)'
alias docker-rm-dangling-volumes='docker volume rm $(docker volume ls -f "dangling=true" -q)'
alias docker-inspect-ip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"
# }
