{ pkgs, lib, inputs, config, ... }: {
  modules = {
    editors = {
      vim.enable = true;

      default = "vim";
    };

    services = {
      ssh.enable = true;
      transmission = {
        enable = true;
        flexget.enable = true;
      };
    };

    shell = {
      enable = true;

      git.enable = true;
      gnupg.enable = true;
      ssh.enable = true;
      zsh.enable = true;
    };
  };

  boot = {
    kernelModules = [ "coretemp" "f71882fg" ];

    loader.grub = {
      enable = true;
      version = 2;
      device = "/dev/sda";
    };
  };

  swapDevices = [{ device = "/.swapfile"; }];

  networking = {
    hostName = "naptime";
    networkmanager.enable = true;
  };

  environment.systemPackages = with pkgs; [
    lm_sensors
    smartmontools
  ];

  hardware = {
    fancontrol = {
      enable = true;
      config = ''
        # Configuration file generated by pwmconfig, changes will be lost
        INTERVAL=10
        DEVPATH=hwmon1=devices/platform/f71882fg.656
        DEVNAME=hwmon1=f71869a
        FCTEMPS=hwmon1/device/pwm3=hwmon1/device/temp1_input
        FCFANS=hwmon1/device/pwm3=
        MINTEMP=hwmon1/device/pwm3=20
        MAXTEMP=hwmon1/device/pwm3=60
        MINSTART=hwmon1/device/pwm3=150
        MINSTOP=hwmon1/device/pwm3=100
      '';
    };
  };

  users.users.minidlna.extraGroups = [ "transmission" ];

  services = {
    smartd = {
      enable = true;
      autodetect = true;
      notifications.wall.enable = true;
      notifications.x11.enable = true;
    };

    cron = {
      enable = true;
      systemCronJobs = [
        "@hourly root rsync -avh --delete /media/ /mirror/ &>>/var/log/mirror.log"
      ];
    };

    samba = {
      enable = true;
      securityType = "user";
      extraConfig = ''
        workgroup = WORKGROUP
        server string = naptime
        netbios name = naptime
        security = user
        hosts allow = 192.168.0. 192.168.1. 192.168.86. 127.0.0.1 localhost
        hosts deny = 0.0.0.0/0
        guest account = nobody
        map to guest = bad user
      '';
      shares = {
        media = {
          path = "/media";
          browseable = "yes";
          "read only" = "yes";
          "guest ok" = "yes";
        };
      };
      openFirewall = true;
    };

    minidlna = {
      enable = true;
      settings = {
        mediaDirs = [ "/media" ];
        announceInterval = 10;
      };
    };

    xserver = {
      enable = true;
      layout = "au";
      desktopManager = {
        kodi.enable = true;
      };

      displayManager = {
        autoLogin = {
          enable = true;
          user = config.user.name;
        };
      };
    };

    # TODO:
    # - Prometheus, Grafana etc.
    # - RTC Wake?
  };
}
